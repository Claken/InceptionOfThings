## tuto vagrant beginner tutorial video 10

#version de vagrant
vagrant -v ou vagrant --version
#initialiser un projet avec vagrant
#ceci crera un vagrantfile
vagrant init
# ceci crera un vagrantfile avec une image d'une machie virtuelle
vagrant init ubuntu/focal64
# ajouter une image d'une vm a vagrant
vagrant box add ubuntu/focal64
#lister les images virtuelles installer localement 
vagrant box list
#permet de lister toute les commandes de vagrant.
vagrant --help
#checker si une machine est obsolete
vagrant box list outdated
#update une image virtuelle
vagrant box update "nom de la machine"
#enleve toutes les machines virtuelles qui sont obsolete
vagrant box prune
#supprimer une box
vagrant box remove "nom d'une machine virtuelle"
#savoir la version de virtual box installer
vboxmanage -v

##commande a l'interieur du vagrantfile
# commande qui permet de choisir une image d'une machine virtuelle pres configurer comme commancement.
config.vm.box = "ubuntu/focal64"
# commande pour definnir les provisions
config.vm.provision "shell", inline:"echo Hello, World!"
config.vm.provision "shell", path:"location.sh"
# commande pour configurer un reseau priver entre hote et vm
config.vm.network "private_network", ip: "192.168.33.10"
# commande pour configurer une redirection de port
config.vm.network "forwarded_port", guest:80, host:8080
# commande pour configurer une redirection de port si hote est occupe
# vagrant choisit automatiquement entre le port 2200 et 2250.
config.vm.network "forwarded_port", guest:80, host:8080, auto_correct:true
# commande pour configurer l'ecart entre les ports
config.vm.usable_port_range = (8000..9000)
# commande pour configurer des dossiers synchronises entre la machine hote et virtuelle
config.vm.synced_folder "chemin dossier hote", "chemin dossier virtuel"
# commande qui permet de specifier le fournisseur de virtualistion de la vm
config.vm.provider "virtualbox"
# commande qui permet de specifier le fournisseur de virtualistion de la vm allouer ram et cpu et un nom
config.vm.provider "virtualbox" do |vb|
    vb.memory = "2048"
    vb.cpus = 2
    vb.name = "lala"
end


#demarrer une ou des machines virtuelle
vagrant up
#se connecter en ssh a la machine
vagrant ssh
#afficher la configuration ssh d'une machine virtuelle
vagrant ssh-config
#arreter de maniere propre une machine virtuelle
vagrant halt "nom de la machine"
#mettre la machine virtuelle en pause sans l'eteindre
vagrant suspend "nom de la machine"
#allumer une machine virtuelle qui a etait mis en pause
vagrant resume "nom de la machine"
#arreter et redemarrer la vm tout en appliquant les modifications specifier dans le vagrantfile
vagrant reload
#arreter et redemarrer la vm tout en ajoutant les modifications de script
vagrant reload --provision
#arreter et supprimer une vm
vagrant destroy
#afficher l'etat actuel des vm dans le dossier
vagrant status
#creer une nouvelle box vagrant a partir de l'etat actuel d'une machine virtuelle
vagrant package --output "nom de la nouvelle box"
#executer a nouveau le provisionnement sur une vm deja cree
vagrant provision
#installer des plugins
vagrant plugin install
#afficher la liste des plugins
vagrant plugin list
#desinstaller un plugin
vagrant plugin uninstall
#detruire tous les plugin
vagrant plugin expunge
#faire un snapshot d'une vm
vagrant snapshot save "name"
#afficher l'etat global de toutes les machines virtuel
vagrant global-status
#afficher l'etat global de toutes les machines virtuel sans la liste des vm qui ne 
#sont plus en cours d'execution ou dont les repertoires int ete supprimes.
vagrant blobal-status --prune
#verifier la validiter syntaxique du fichier vagrantfile
vagrant validate


### def
#provisioning a vm
c'est le processus d'installation et de configuration d'une vm avec les logiciels et ressources
necessaire pour une tache ou application particuliaire.
#comment approvisioner une vm
- facon 1
- dans un fichier vagrantfile
- ajouter la commande config.vm.provision
- choisir un provisionneur comme (Shell, Ansible, Puppet, Chef).
- exemple (config.vm.provision "shell", inline <<-SHELL
    # commandes
    SHELL)
- facon 2
- creer un nouveau fichier et indiquer l'emplacement dans le vagrantfile.
- creer un fichier provision.sh
- exemple config.vm.provision "shell", path:"location.sh" 
#qu'est ce qu'un vagrantfile generator
c'est un outil qui permet de faire et configurer rapidement une vm dans un vagrantfile
#Combien de configuration reseau vagrant propose t'il et qu'elles sont elles?
- port forwarding (redirection de port)
- private network (reseau privee)
- public network (reseau public)
# qu'est-ce que le port forwarding?
- C'est ce qui permet de rediriger les requetes provenant de ports de la machine hote vers
les ports de la machine virtuelle.
# Qu'est ce qu'un private network?
- C'est la creation d'un reseau privee entre la machine hote et la machine virtuelle
- une addresse ip statique est cree ce qui facilite la communication directe entre l'hote et la vm
# qu'est ce que le snapshot d'une vm?
- C'est une copy complete de la VM et de son etat.
#expliquer la commande Vagrant.configure("2") do |config|
-Vagrant.configure est une methode pour initialiser des vm dans un fichier Vagrantfile.
-"2" represente la version utilisee dans le fichier.
-do en ruby indique le debut d'un block
-config est un parametre passer celui ci est un objet qui contient toutes les configurations des vm.
-end definnit la fin du bloc. 

